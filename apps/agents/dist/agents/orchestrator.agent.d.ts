import { BaseAgent } from '../framework/base-agent';
import { Task } from '@brandpillar/shared';
export declare class OrchestratorAgent extends BaseAgent {
    private redis;
    private agentRegistry;
    private taskQueues;
    private orchestrationTimer?;
    constructor();
    initialize(): Promise<void>;
    processTask(task: Task): Promise<any>;
    validateTask(task: Task): Promise<boolean>;
    private subscribeToAllAgents;
    private handleAgentMessage;
    private handleAgentStatusUpdate;
    private handleTaskResult;
    private handleErrorReport;
    private handleLearningUpdate;
    private startOrchestration;
    private processPendingTasks;
    private assignTask;
    private getAvailableAgents;
    private selectBestAgent;
    private calculateAgentScore;
    private isAgentHealthy;
    private checkAgentHealth;
    private reassignAgentTasks;
    private balanceWorkload;
    private cleanupOldTasks;
    private orchestrateWorkflow;
    private checkWorkflowContinuation;
    private updateTaskMetrics;
    private applyLearningInsights;
    private getAgentCapabilities;
    private loadAgentRegistry;
    private saveAgentRegistry;
    private getAgentStatus;
    private getSystemHealth;
    private groupAgentsByType;
    private rebalanceTasks;
    stop(): Promise<void>;
}
