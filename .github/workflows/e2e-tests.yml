name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome, firefox]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npx cypress install
        
    - name: Build application
      run: npm run build:web
      env:
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
        REACT_APP_GOOGLE_CLIENT_ID: ${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }}
        
    - name: Start application
      run: |
        npm install -g serve
        serve -s build -l 3000 &
        sleep 10
        
    - name: Wait for application
      run: |
        npx wait-on http://localhost:3000 --timeout 60000
        
    - name: Run Cypress tests
      run: npm run test:e2e:headless -- --browser ${{ matrix.browser }}
      env:
        CYPRESS_baseUrl: http://localhost:3000
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        
    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots-${{ matrix.browser }}
        path: cypress/screenshots
        
    - name: Upload videos on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-videos-${{ matrix.browser }}
        path: cypress/videos

  accessibility-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npx cypress install
        
    - name: Build application
      run: npm run build:web
      env:
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
        REACT_APP_GOOGLE_CLIENT_ID: ${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }}
        
    - name: Start application
      run: |
        npm install -g serve
        serve -s build -l 3000 &
        sleep 10
        
    - name: Run accessibility tests
      run: npx cypress run --spec "cypress/e2e/**/*accessibility*.cy.ts"
      env:
        CYPRESS_baseUrl: http://localhost:3000